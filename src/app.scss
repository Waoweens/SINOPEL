/* Write your global styles here, in PostCSS syntax */
.input-multi-border:focus {
	--tw-ring-color: rgb(var(--color-primary-500) / var(--tw-border-opacity)) !important;
	border-color: rgb(var(--color-primary-500) / var(--tw-border-opacity)) !important;
	transition-property: color, background-color, border-color, text-decoration-color, fill, stroke,
		opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
	transition-property: color, background-color, border-color, text-decoration-color, fill, stroke,
		opacity, box-shadow, transform, filter, backdrop-filter;
	transition-property: color, background-color, border-color, text-decoration-color, fill, stroke,
		opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
	transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
	transition-duration: 200ms;
}

.paper-F4 {
	$original-width: 210;
	$px-per-mm: 3.7795; // 96dpi / 25.4mm
	$aspect-ratio: 1.5714; // 330mm / 210mm
	$original-width-px: $original-width * $px-per-mm;

	all: initial;
	display: block;
	box-sizing: border-box;
	background-color: white !important;
	width: #{$original-width-px}px;
	min-height: calc(#{$original-width-px}px * 1.5714);

	// transform-origin: top left;
	transform: scale(var(--paper-scale));
	margin: calc(var(--paper-margin-y) * -1px) calc(var(--paper-margin-x) * -1px);

	font-family: 'Bookman Old Style', Georgia, Cambria, serif !important;
	> header {
		padding-top: 5mm;
		padding-right: 15mm;
		padding-left: 15mm;
	}

	> section {
		padding-left: 20mm;
		padding-right: 20mm;
		padding-top: 5mm;
		padding-bottom: 10mm;
		line-height: 1.5;
		font-size: 11pt;
	}

	> footer {
		padding-left: 20mm;
		padding-right: 20mm;
		padding-top: 5mm;
		padding-bottom: 10mm;
		line-height: 1.5;
		font-size: 11pt;
	}

	ol {
		list-style-type: decimal;
	}

	ul {
		list-style-type: disc;
	}

	.list-bold li span,
	.list-bold li::marker {
		font-weight: 800;
	}

	.kepala-surat {
		list-style-type: none;
		display: table;
		font-size: 12pt;

		li {
			display: table-row;
		}

		.list-title {
			display: table-cell;
			padding-right: 1rem;
		}
	}
}

.x-btn-group-aria {
    display: inline-flex;
    flex-direction: row;
    overflow: hidden;
    border-radius: var(--theme-rounded-base);
    isolation: isolate;
}
.x-btn-group-aria > :not([hidden]) ~ :not([hidden]) {
    --tw-space-x-reverse: 0;
    margin-right: calc(0px * var(--tw-space-x-reverse));
    margin-left: calc(0px * calc(1 - var(--tw-space-x-reverse)));
}
.x-btn-group-aria [role=button],
    .x-btn-group-aria a,
    .x-btn-group-aria-vertical [role=button],
    .x-btn-group-aria-vertical a {
    font-size: 1rem/* 16px */;
    line-height: 1.5rem/* 24px */;
    padding-left: 1.25rem/* 20px */;
    padding-right: 1.25rem/* 20px */;
    padding-top: 9px;
    padding-bottom: 9px;
    white-space: nowrap;
    text-align: center;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    transition-property: all;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 150ms;
    color: inherit !important;
    text-decoration-line: none !important;
}
.x-btn-group-aria [role=button],
    .x-btn-group-aria a,
    .x-btn-group-aria-vertical [role=button],
    .x-btn-group-aria-vertical a {
    font-size: 1rem/* 16px */;
    line-height: 1.5rem/* 24px */;
    padding-left: 1.25rem/* 20px */;
    padding-right: 1.25rem/* 20px */;
    padding-top: 9px;
    padding-bottom: 9px;
    white-space: nowrap;
    text-align: center;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    transition-property: all;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 150ms;
    color: inherit !important;
    text-decoration-line: none !important;
}
.x-btn-group-aria [role=button] > :not([hidden]) ~ :not([hidden]),
    .x-btn-group-aria a > :not([hidden]) ~ :not([hidden]),
    .x-btn-group-aria-vertical [role=button] > :not([hidden]) ~ :not([hidden]),
    .x-btn-group-aria-vertical a > :not([hidden]) ~ :not([hidden]) {
    --tw-space-x-reverse: 0;
    margin-right: calc(0.5rem/* 8px */ * var(--tw-space-x-reverse));
    margin-left: calc(0.5rem/* 8px */ * calc(1 - var(--tw-space-x-reverse)));
}
.x-btn-group-aria [role=button] > :not([hidden]) ~ :not([hidden]),
    .x-btn-group-aria a > :not([hidden]) ~ :not([hidden]),
    .x-btn-group-aria-vertical [role=button] > :not([hidden]) ~ :not([hidden]),
    .x-btn-group-aria-vertical a > :not([hidden]) ~ :not([hidden]) {
    --tw-space-x-reverse: 0;
    margin-right: calc(0.5rem/* 8px */ * var(--tw-space-x-reverse));
    margin-left: calc(0.5rem/* 8px */ * calc(1 - var(--tw-space-x-reverse)));
}
.x-btn-group-aria [role=button]:hover,
    .x-btn-group-aria a:hover,
    .x-btn-group-aria-vertical [role=button]:hover,
    .x-btn-group-aria-vertical a:hover {
    --tw-brightness: brightness(1.15);
    filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
    background-color: rgb(var(--color-surface-50) / 3%);
}
.x-btn-group-aria [role=button]:hover,
    .x-btn-group-aria a:hover,
    .x-btn-group-aria-vertical [role=button]:hover,
    .x-btn-group-aria-vertical a:hover {
    --tw-brightness: brightness(1.15);
    filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
    background-color: rgb(var(--color-surface-50) / 3%);
}
.x-btn-group-aria [role=button]:active,
    .x-btn-group-aria a:active,
    .x-btn-group-aria-vertical [role=button]:active,
    .x-btn-group-aria-vertical a:active {
    background-color: rgb(var(--color-surface-900) / 3%);
}
.x-btn-group-aria [role=button]:active,
    .x-btn-group-aria a:active,
    .x-btn-group-aria-vertical [role=button]:active,
    .x-btn-group-aria-vertical a:active {
    background-color: rgb(var(--color-surface-900) / 3%);
}
.x-btn-group-aria * + * {
    border-top-width: 0px;
    border-left-width: 1px;
    border-color: rgb(var(--color-surface-500) / 0.2);
}